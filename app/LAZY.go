// generated by lazy, DO NOT EDIT.

package main

import "net/http"
import "time"
import "lazy/app/controller"
import "lazy/app/filter"

func init() {
	http.HandleFunc("/Demo/Get", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		c := new(controller.Demo)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e}); !ok {
				return
			}
		}()
		c.Get(w, r)
	})

	http.HandleFunc("/Demo/Set", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		c := new(controller.Demo)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e}); !ok {
				return
			}
		}()
		if ok := filter.Login(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e}); !ok {
			return
		}
		if ok := filter.Method(w, r, map[string]interface{}{"type": "post", "__T__": t, "__C__": c, "__E__": e}); !ok {
			return
		}
		c.Set(w, r)
	})

}
